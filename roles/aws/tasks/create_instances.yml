---

- name: find ami for rhel node
  ec2_ami_info:
    region: "{{ ansible_env.AWS_DEFAULT_REGION | default(omit) }}"
    owners: "309956199498"
    filters:
      name: "RHEL-8*HVM-*Access*"
      architecture: "x86_64"
  register: amis

- name: save ami for rhel node
  set_fact:
    node_ami_rhel: >
      {{ amis.images | selectattr('name', 'defined') | sort(attribute='name') | last }}

#- debug:
#    msg: "RHEL AMI: {{ node_ami_rhel }}"

- name: Deploy EC2 Instances
  delegate_to: localhost
  amazon.aws.cloudformation:
    aws_access_key: "{{ ansible_env.AWS_ACCESS_KEY_ID | default(omit) }}"
    aws_secret_key: "{{ ansible_env.AWS_SECRET_ACCESS_KEY | default(omit) }}"
    security_token: "{{ ansible_env.AWS_SESSION_TOKEN | default(omit) }}"
    region: "{{ ansible_env.AWS_DEFAULT_REGION | default(omit) }}"
    #ec2_url: "{{ cloudformation_endpoint | default(omit) }}"
    validate_certs: "{{ aws_ssl_enabled }}"
    stack_name: "{{ ec2_stack_name }}"
    state: present
    disable_rollback: true
    create_timeout: 15
    template: "roles/aws/files/ec2_instances.yaml"
    template_parameters:
      KeyName: "{{ ec2_key_pair_name }}"
      RHELAmi: "{{ node_ami_rhel.image_id }}"
      Quay0Subnet: "{{ subnets[0].id }}"
      Quay1Subnet: "{{ subnets[1].id }}"
      Quay2Subnet: "{{ subnets[2].id }}"
      #QuaySecurityGroupId: ''
      #QuayInstanceProfileName:
      QuayInstanceType: "m5.xlarge"
      VpcId: "{{ vpc_id }}"
      HostedZoneId: "{{ hosted_zone_id }}"
      HostedZoneName: "{{ hosted_zone_name }}"
      #VpcCidr: "{{ vpc_cidr }}"
#  register: ec2_stack_outputs
#
#- name: Add bootstrap node to the api internal target group
#  delegate_to: localhost
#  shell: aws --no-verify-ssl elbv2 register-targets --target-group-arn "{{ ec2_stack_outputs.cloudformation.quayec2.stack_outputs.ExternalApiTargetGroupArn }}" --targets '{"Id":"{{ item }}"}'
#  loop:
#    - "{{ ec2_stack_outputs.cloudformation.quayec2.stack_outputs.Quay0PublicIp }}"
#    - "{{ ec2_stack_outputs.cloudformation.quayec2.stack_outputs.Quay1PublicIp }}"
#    - "{{ ec2_stack_outputs.cloudformation.quayec2.stack_outputs.Quay2PublicIp }}"
