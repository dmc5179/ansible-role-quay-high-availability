AWSTemplateFormatVersion: 2010-09-09
Description: Template for Quay on RHEL HA

Parameters:

  VpcId:
    Description: >-
      The VPC-scoped resources will belong to this VPC.
    Type: AWS::EC2::VPC::Id

  RHELAmi:
    Description: >-
      Current Red Hat Enterprise Linux AMI to use.
    Type: AWS::EC2::Image::Id

  KeyName:
    Description: >-
      EC2 key pair name
    Type: String

  Quay0Subnet:
    Description: >-
      The subnet to launch the first quay node into.
    Type: AWS::EC2::Subnet::Id

  Quay1Subnet:
    Description: >-
      The subnet to launch the second quay node into.
    Type: AWS::EC2::Subnet::Id

  Quay2Subnet:
    Description: >-
      The subnet to launch the third quay node into.
    Type: AWS::EC2::Subnet::Id

  HostedZoneId:
    Description: The Route53 public zone ID to register the targets with, such as Z21IXYZABCZ2A4.
    Type: String

  HostedZoneName:
    Description: The Route53 zone to register the targets with, such as example.com. Omit the trailing period.
    Type: String
    Default: "example.com"

#  QuaySecurityGroupId:
#    Description: >-
#      The quay security group ID.
#    Type: AWS::EC2::SecurityGroup::Id

#  QuayInstanceProfileName:
#    Description: >-
#      IAM profile to associate with quay nodes.
#    Type: String

  QuayInstanceType:
    Default: m5.xlarge
    Type: String

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Host Information"
        Parameters:
          - QuayInstanceType
          - RHELAmi
          - QuaySecurityGroupId
          #- QuayInstanceProfileName
      - Label:
          default: "Network Configuration"
        Parameters:
          - VpcId
          - Quay0Subnet
          - Quay1Subnet
          - Quay2Subnet
      - Label:
          default: "DNS"
        Parameters:
        - HostedZoneName
        - HostedZoneId
    ParameterLabels:
      VpcId:
        default: "VPC ID"
      Quay0Subnet:
        default: "Quay-0 Subnet"
      Quay1Subnet:
        default: "Quay-1 Subnet"
      Quay2Subnet:
        default: "Quay-2 Subnet"
      QuayInstanceType:
        default: "Quay Instance Type"
      #QuayInstanceProfileName:
      #  default: "Quay Instance Profile Name"
      RHELAmi:
        default: "Red Hat Enterprise Linux CoreOS AMI ID"
      QuaySecurityGroupId:
        default: "Quay Security Group ID"
      HostedZoneName:
        default: "Public Hosted Zone Name"
      HostedZoneId:
        default: "Public Hosted Zone ID"

Resources:

  ExternalApiTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      #HealthCheckPath: "/readyz"
      HealthCheckPort: 22
      HealthCheckProtocol: TCP
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      Port: 443
      Protocol: TCP
      TargetType: ip
      VpcId:
        Ref: VpcId
      TargetGroupAttributes:
      - Key: deregistration_delay.timeout_seconds
        Value: 60

  RedisTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      #HealthCheckPath: "/readyz"
      HealthCheckPort: 22
      HealthCheckProtocol: TCP
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      Port: 6379
      Protocol: TCP
      TargetType: ip
      VpcId:
        Ref: VpcId
      TargetGroupAttributes:
      - Key: deregistration_delay.timeout_seconds
        Value: 60

  ExternalApiListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn:
          Ref: ExternalApiTargetGroup
      LoadBalancerArn:
        Ref: ExtApiElb
      Port: 443
      Protocol: TCP

  RedisListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn:
          Ref: RedisTargetGroup
      LoadBalancerArn:
        Ref: ExtApiElb
      Port: 6379
      Protocol: TCP

  ExtApiElb:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: "quay-ext"
      IpAddressType: ipv4
      Subnets:
        - !Ref Quay0Subnet
        - !Ref Quay1Subnet
        - !Ref Quay2Subnet
      Type: network

  ExternalApiServerRecord:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      Comment: Alias record for the API server
      HostedZoneId: !Ref HostedZoneId
      RecordSets:
      - Name: !Join [".", [ "quay", !Ref HostedZoneName] ]
        Type: A
        AliasTarget:
          HostedZoneId: !GetAtt ExtApiElb.CanonicalHostedZoneID
          DNSName: !GetAtt ExtApiElb.DNSName

  RedisServerRecord:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      Comment: Alias record for the Redis server
      HostedZoneId: !Ref HostedZoneId
      RecordSets:
      - Name: !Join [".", [ "redis", !Ref HostedZoneName] ]
        Type: A
        AliasTarget:
          HostedZoneId: !GetAtt ExtApiElb.CanonicalHostedZoneID
          DNSName: !GetAtt ExtApiElb.DNSName

  ClairServerRecord:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      Comment: Alias record for the Redis server
      HostedZoneId: !Ref HostedZoneId
      RecordSets:
      - Name: !Join [".", [ "clair", !Ref HostedZoneName] ]
        Type: A
        AliasTarget:
          HostedZoneId: !GetAtt ExtApiElb.CanonicalHostedZoneID
          DNSName: !GetAtt ExtApiElb.DNSName

  QuayIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: "Allow"
          Principal:
            Service:
            - "ec2.amazonaws.com"
          Action:
          - "sts:AssumeRole"
      Path: "/"
      Policies:
      - PolicyName: "quay-policy"
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: "Allow"
            Action: "s3:ListBucket"
            Resource: "arn:aws:s3:::quaydan"
          - Effect: "Allow"
            Action: "s3:GetBucketLocation"
            Resource: "arn:aws:s3:::quaydan"
          - Effect: "Allow"
            Action: "s3:ListBucketMultipartUploads"
            Resource: "arn:aws:s3:::quaydan"
          - Effect: "Allow"
            Action: "s3:PutBucketCORS"
            Resource: "arn:aws:s3:::quaydan"
          - Effect: "Allow"
            Action: "s3:PutObject"
            Resource: "arn:aws:s3:::quaydan"
          - Effect: "Allow"
            Action: "s3:GetObject"
            Resource: "arn:aws:s3:::quaydan"
          - Effect: "Allow"
            Action: "s3:DeleteObject"
            Resource: "arn:aws:s3:::quaydan"
          - Effect: "Allow"
            Action: "s3:ListMultipartUploadParts"
            Resource: "arn:aws:s3:::quaydan"
          - Effect: "Allow"
            Action: "s3:AbortMultipartUpload"
            Resource: "arn:aws:s3:::quaydan"

  QuayInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: "/"
      Roles:
      - Ref: "QuayIamRole"

  QuaySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "quay-external-access"
      GroupDescription: External access to quay
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          ToPort: 443
          FromPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 6379
          ToPort: 6379
          CidrIp: 0.0.0.0/0
      VpcId: !Ref VpcId
      Tags:
        - Key: "Name"
          Value: "quay-external-access"

  Quay0:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref RHELAmi
      KeyName: !Ref KeyName
      BlockDeviceMappings:
      - DeviceName: /dev/xvda
        Ebs:
          VolumeSize: "50"
          VolumeType: "gp2"
      IamInstanceProfile: !Ref QuayInstanceProfile
      InstanceType: !Ref QuayInstanceType
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet:
            - !Ref QuaySecurityGroup
            - "sg-c0cbf0af" # default
            - "sg-0f3890ca00e12121b" # home
#            - !Ref "QuaySecurityGroupId"
          SubnetId: !Ref "Quay0Subnet"
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash
            sudo dnf -y install python3
      Tags:
        - Key: Name
          Value: !Join ["-", ["quay", "0"]]

  Quay1:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref RHELAmi
      KeyName: !Ref KeyName
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: "50"
            VolumeType: "gp2"
      IamInstanceProfile: !Ref QuayInstanceProfile
      InstanceType: !Ref QuayInstanceType
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet:
            - !Ref QuaySecurityGroup
            - "sg-c0cbf0af" # default
            - "sg-0f3890ca00e12121b" # home
#            - !Ref "QuaySecurityGroupId"
          SubnetId: !Ref "Quay1Subnet"
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash
            sudo dnf -y install python3
      Tags:
        - Key: Name
          Value: !Join ["-", ["quay", "1"]]

  Quay2:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref RHELAmi
      KeyName: !Ref KeyName
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: "50"
            VolumeType: "gp2"
      IamInstanceProfile: !Ref QuayInstanceProfile
      InstanceType: !Ref QuayInstanceType
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet:
            - !Ref QuaySecurityGroup
            - "sg-c0cbf0af" # default
            - "sg-0f3890ca00e12121b" # home
#            - !Ref "QuaySecurityGroupId"
          SubnetId: !Ref "Quay2Subnet"
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash
            sudo dnf -y update
            sudo dnf -y install python3
      Tags:
        - Key: Name
          Value: !Join ["-", ["quay", "2"]]

Outputs:

  Quay0PublicIp:
    Description: The quay 0 node public IP address.
    Value: !GetAtt Quay0.PublicIp

  Quay1PublicIp:
    Description: The quay 1 node public IP address.
    Value: !GetAtt Quay1.PublicIp

  Quay2PublicIp:
    Description: The quay 2 node public IP address.
    Value: !GetAtt Quay2.PublicIp

  Quay0PrivateIp:
    Description: The quay 0 node private IP address.
    Value: !GetAtt Quay0.PrivateIp

  Quay1PrivateIp:
    Description: The quay 1 node private IP address.
    Value: !GetAtt Quay1.PrivateIp

  Quay2PrivateIp:
    Description: The quay 2 node private IP address.
    Value: !GetAtt Quay2.PrivateIp

  ExternalApiTargetGroupArn:
    Description: ARN of the external API target group.
    Value: !Ref ExternalApiTargetGroup

  RedisTargetGroupArn:
    Description: ARN of the redis target group
    Value: !Ref RedisTargetGroup
